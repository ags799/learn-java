buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'net.ltgt.gradle:gradle-apt-plugin:0.7'
  }
}

plugins {
  id 'nebula.dependency-recommender' version '4.1.2'
  id 'org.unbroken-dome.test-sets' version '1.3.2'
}

apply plugin: 'java'
apply plugin: 'net.ltgt.apt'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  jcenter()
  mavenCentral()
}

testSets {
  integrationTest
}

dependencyRecommendations {
  propertiesFile file: file('versions.props')
}

dependencies {
  apt 'org.immutables:value'

  compileOnly 'org.immutables:value'

  compile 'com.amazonaws:aws-java-sdk-dynamodb'
  compile 'com.amazonaws:aws-lambda-java-core'
  compile 'com.amazonaws:aws-lambda-java-log4j'
  compile 'com.fasterxml.jackson.core:jackson-core'
  compile 'com.fasterxml.jackson.core:jackson-databind'
  compile 'com.fasterxml.jackson.core:jackson-annotations'
  compile 'com.google.guava:guava'
  compile 'com.jrestless.aws:jrestless-aws-gateway-handler'
  compile 'org.glassfish.jersey.media:jersey-media-json-jackson'
  compile 'org.slf4j:jul-to-slf4j'
  compile 'org.slf4j:slf4j-log4j12'

  integrationTestCompile 'commons-io:commons-io'
  integrationTestCompile 'io.github.openfeign:feign-core'
  integrationTestCompile 'io.github.openfeign:feign-jackson'
  integrationTestCompile 'io.github.openfeign:feign-jaxrs'

  testCompile 'junit:junit'
  testCompile 'org.assertj:assertj-core'
}

checkstyle {
  configFile file('checkstyle.xml')
  maxWarnings = 0
  toolVersion '7.6.1'
}

findbugs {
  excludeFilter file('findbugs-exclude.xml')
}

task deployable(type: Zip, group: 'deployment') {
  // The path to this file must be set in the serverless.yml file under package.artifact.
  baseName = "learn-java"
  from compileJava
  from processResources
  into('lib') {
    from configurations.runtime
  }
}

task deploy(type: Exec, group: 'deployment', dependsOn: 'deployable') {
  commandLine 'serverless', 'deploy', '--stage', "${stage}", '--region', "${region}"
}

task removeDeployment(type: Exec, group: 'deployment') {
  commandLine 'serverless', 'remove', '--stage', "${stage}", '--region', "${region}"
}
