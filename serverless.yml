service: learn-java

frameworkVersion: "=1.12.1"

custom:
  defaultStage: dev
  defaultRegion: us-east-1
  usersTableName: ${self:service}-${self:provider.stage}-users
  edgesTableName: ${self:service}-${self:provider.stage}-edges

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, self:custom.defaultStage}
  region: ${opt:region, self:custom.defaultRegion}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/${self:custom.edgesTableName}"]]
        - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/${self:custom.usersTableName}"]]

package:
  artifact: build/distributions/learn-java.zip

functions:
  all:
    handler: com.sharpandrew.learnjava.serverless.Handler
    environment:
      EDGES_TABLE_NAME: ${self:custom.edgesTableName}
      USERS_TABLE_NAME: ${self:custom.usersTableName}
    events:
      - http:
          path: api/{proxy+}
          method: any

resources:
  Resources:
    edges:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.edgesTableName}
        AttributeDefinitions:
          - AttributeName: edgeId
            AttributeType: S
        KeySchema:
          - AttributeName: edgeId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTableName}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
